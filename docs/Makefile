# Makefile.in generated by automake 1.15 from Makefile.am.
# docs/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/plank
pkgincludedir = $(includedir)/plank
pkglibdir = $(libdir)/plank
pkglibexecdir = $(libexecdir)/plank
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
#am__append_1 = \
#	$(BUILT_SOURCES) \
#	vala-doc/* \
#	$(NULL)

subdir = docs
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/gcov.m4 \
	$(top_srcdir)/m4/gmock.m4 $(top_srcdir)/m4/gsettings.m4 \
	$(top_srcdir)/m4/intltool.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/nls.m4 $(top_srcdir)/m4/pkg.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
SOURCES =
DIST_SOURCES =
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
man1dir = $(mandir)/man1
am__installdirs = "$(DESTDIR)$(man1dir)" "$(DESTDIR)$(docdir)"
NROFF = nroff
MANS = $(dist_man_MANS)
DATA = $(doc_DATA)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
am__DIST_COMMON = $(dist_man_MANS) $(srcdir)/Makefile.in \
	$(top_srcdir)/Makefile.common
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/prod/Downloads/plank-src/build-aux/missing aclocal-1.15
ALL_LINGUAS = 
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
API_VERSION = 0.11
AR = ar
AUTOCONF = ${SHELL} /home/prod/Downloads/plank-src/build-aux/missing autoconf
AUTOHEADER = ${SHELL} /home/prod/Downloads/plank-src/build-aux/missing autoheader
AUTOMAKE = ${SHELL} /home/prod/Downloads/plank-src/build-aux/missing automake-1.15
AWK = gawk
BAMF_CFLAGS = -pthread -I/usr/include/libbamf3 -I/usr/lib/libbamf3/include -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include
BAMF_LIBS = -lbamf3 -lgio-2.0 -lgobject-2.0 -lglib-2.0
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2  -DGLIB_VERSION_MIN_REQUIRED=GLIB_VERSION_2_40  -DGLIB_VERSION_MAX_ALLOWED=GLIB_VERSION_2_40  -DGDK_VERSION_MIN_REQUIRED=GDK_VERSION_3_10  -DGDK_VERSION_MAX_ALLOWED=GDK_VERSION_3_10 -Wl,--enable-new-dtags
COVERAGE_CFLAGS = 
COVERAGE_LDFLAGS = 
COVERAGE_VALAFLAGS = 
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DBUSMENU_CFLAGS = 
DBUSMENU_LIBS = 
DBUS_LAUNCH = 
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DOCKLET_LDFLAGS = -module -avoid-version
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
FGREP = /usr/bin/grep -F
GCOVR = 
GENHTML = 
GETTEXT_PACKAGE = plank
GLIB_COMPILE_RESOURCES = /usr/bin/glib-compile-resources
GLIB_COMPILE_SCHEMAS = glib-compile-schemas
GMOCK_INCLUDEDIR = /usr/include
GMOCK_SRCDIR = /usr/src/gmock
GMSGFMT = /usr/bin/msgfmt
GREP = /usr/bin/grep
GSETTINGS_DISABLE_SCHEMAS_COMPILE = 
GTEST_INCLUDEDIR = /usr/include
GTEST_SRCDIR = /usr/src/gtest
HELP2MAN = 
HIDPI_CFLAGS = -I/usr/include/cairo -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng16 -I/usr/include/harfbuzz -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/freetype2 -I/usr/include/harfbuzz -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/libpng16
HIDPI_LIBS = -lcairo
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INTLTOOL_EXTRACT = /usr/bin/intltool-extract
INTLTOOL_MERGE = /usr/bin/intltool-merge
INTLTOOL_PERL = /usr/bin/perl
INTLTOOL_UPDATE = /usr/bin/intltool-update
INTLTOOL_V_MERGE = $(INTLTOOL__v_MERGE_$(V))
INTLTOOL_V_MERGE_OPTIONS = $(intltool__v_merge_options_$(V))
INTLTOOL__v_MERGE_ = $(INTLTOOL__v_MERGE_$(AM_DEFAULT_VERBOSITY))
INTLTOOL__v_MERGE_0 = @echo "  ITMRG " $@;
LCOV = 
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBM = -lm
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_AGE = 0
LT_CURRENT = 1
LT_REVISION = 0
LT_SYS_LIBRARY_PATH = 
MAINT = 
MAKEINFO = ${SHELL} /home/prod/Downloads/plank-src/build-aux/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /usr/bin/mkdir -p
MSGFMT = /usr/bin/msgfmt
MSGMERGE = /usr/bin/msgmerge
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = plank
PACKAGE_BUGREPORT = https://bugs.launchpad.net/plank
PACKAGE_NAME = plank
PACKAGE_STRING = plank 0.11.4
PACKAGE_TARNAME = plank
PACKAGE_URL = https://launchpad.net/plank
PACKAGE_VERSION = 0.11.4
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
PLANK_CORE_CFLAGS = -pthread -I/usr/include/gtk-3.0 -I/usr/include/gee-0.8 -I/usr/include/libbamf3 -I/usr/lib/libbamf3/include -I/usr/include/libwnck-3.0 -I/usr/include/startup-notification-1.0 -I/usr/include/gtk-3.0 -I/usr/include/at-spi2-atk/2.0 -I/usr/include/at-spi-2.0 -I/usr/include/dbus-1.0 -I/usr/lib/dbus-1.0/include -I/usr/include/gtk-3.0 -I/usr/include/gio-unix-2.0/ -I/usr/include/cairo -I/usr/include/libdrm -I/usr/include/pango-1.0 -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng16 -I/usr/include/harfbuzz -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/freetype2 -I/usr/include/harfbuzz -I/usr/include/libpng16 -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include
PLANK_CORE_LIBS = -lgio-2.0 -Wl,--export-dynamic -lgmodule-2.0 -pthread -lgdk-3 -lgee-0.8 -lbamf3 -lwnck-3 -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lgobject-2.0 -lglib-2.0 -lX11 -lXi -lXfixes
PLANK_CORE_OPTIONAL_PKGS =  xi >= 1.6.99.1 xfixes >= 5.0
PLANK_CORE_VALAFLAGS =  --target-glib=2.40 --define HAVE_HIDPI --define HAVE_BAMF_0_4 --define HAVE_BARRIERS --define HAVE_SYS_PRCTL_H --pkg gio-unix-2.0                       --pkg gmodule-2.0                       --pkg gtk+-3.0                       --pkg gdk-x11-3.0                       --pkg gdk-pixbuf-2.0                       --pkg cairo                       --pkg gee-0.8                       --pkg libbamf3                       --pkg libwnck-3.0                       --pkg posix                       --pkg x11 --pkg xi --pkg xfixes
PLANK_DOCS_VALAFLAGS = --target-glib=2.40 --define HAVE_HIDPI --define HAVE_BAMF_0_4 --define HAVE_BARRIERS --define HAVE_SYS_PRCTL_H --pkg gio-unix-2.0                       --pkg gmodule-2.0                       --pkg gtk+-3.0                       --pkg gdk-x11-3.0                       --pkg gdk-pixbuf-2.0                       --pkg cairo                       --pkg gee-0.8                       --pkg libbamf3                       --pkg libwnck-3.0                       --pkg posix                       --pkg x11 --pkg xi --pkg xfixes
PLANK_MAJOR_MINOR_VERSION = 0.11
PLANK_MAJOR_VERSION = 0
PLANK_MICRO_VERSION = 4
PLANK_MINOR_VERSION = 11
PLANK_NANO_VERSION = 0
RANLIB = ranlib
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
SHTOOL = 
STRIP = strip
USE_NLS = yes
VALAC = /usr/bin/valac
VALADOC = 
VALADOC_CFLAGS = 
VALADOC_LIBS = 
VAPIGEN = /usr/bin/vapigen
VERSION = 0.11.4
XGETTEXT = /usr/bin/xgettext
XMLLINT = /usr/bin/xmllint
XVFB_RUN = 
abs_builddir = /home/prod/Downloads/plank-src/docs
abs_srcdir = /home/prod/Downloads/plank-src/docs
abs_top_builddir = /home/prod/Downloads/plank-src
abs_top_srcdir = /home/prod/Downloads/plank-src
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=ustar -chf - "$$tardir"
am__untar = tar -xf -
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
gsettingsschemadir = ${datarootdir}/glib-2.0/schemas
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/prod/Downloads/plank-src/build-aux/install-sh
intltool__v_merge_options_ = $(intltool__v_merge_options_$(AM_DEFAULT_VERBOSITY))
intltool__v_merge_options_0 = -q
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
NULL = 
AM_V_VALA = $(am__v_VALA_$(V))
am__v_VALA_ = $(am__v_VALA_$(AM_DEFAULT_VERBOSITY))
am__v_VALA_0 = @echo "  VALAC " $?;
AM_CPPFLAGS = \
	-include $(CONFIG_HEADER) \
	-DDATADIR=\"$(datadir)\" \
	-DPKGDATADIR=\"$(pkgdatadir)\" \
	-DLIBDIR=\"$(libdir)\" \
	-DPKGLIBDIR=\"$(pkglibdir)\" \
	-DDOCKLETSDIR=\"$(pkglibdir)/docklets\" \
	$(NULL)

dist_man_MANS = \
	plank.1 \
	$(NULL)

EXTRA_DIST = plank.h2m $(NULL) $(am__append_1)
#BUILT_SOURCES = \
#	plank_vala_doc.stamp \
#	$(NULL)

#common_doc_files = \
#	*.css \
#	*.devhelp2 \
#	*.html \
#	*.png \
#	$(NULL)

#doc_DATA = \
#	$(addprefix vala-doc/plank/,$(common_doc_files) index.htm *.js) \
#	vala-doc/plank/img/*.png \
#	$(NULL)

#plank_doc_files = \
#	$(top_srcdir)/lib/DBusManager.vala \
#	$(top_srcdir)/lib/DockController.vala \
#	$(top_srcdir)/lib/DockPreferences.vala \
#	$(top_srcdir)/lib/DockRenderer.vala \
#	$(top_srcdir)/lib/DragManager.vala \
#	$(top_srcdir)/lib/HideManager.vala \
#	$(top_srcdir)/lib/PositionManager.vala \
#	$(top_builddir)/lib/Version.vala \
#	$(top_srcdir)/lib/DBus/Client.vala \
#	$(top_srcdir)/lib/DBus/Interfaces.vala \
#	$(top_srcdir)/lib/Docklets/Docklet.vala \
#	$(top_srcdir)/lib/Docklets/DockletItem.vala \
#	$(top_srcdir)/lib/Docklets/DockletManager.vala \
#	$(top_srcdir)/lib/Drawing/Color.vala \
#	$(top_srcdir)/lib/Drawing/DrawingService.vala \
#	$(top_srcdir)/lib/Drawing/DockTheme.vala \
#	$(top_srcdir)/lib/Drawing/Easing.vala \
#	$(top_srcdir)/lib/Drawing/Renderer.vala \
#	$(top_srcdir)/lib/Drawing/Surface.vala \
#	$(top_srcdir)/lib/Drawing/SurfaceCache.vala \
#	$(top_srcdir)/lib/Drawing/Theme.vala \
#	$(top_srcdir)/lib/Factories/AbstractMain.vala \
#	$(top_srcdir)/lib/Factories/Factory.vala \
#	$(top_srcdir)/lib/Factories/ItemFactory.vala \
#	$(top_srcdir)/lib/Items/ApplicationDockItem.vala \
#	$(top_srcdir)/lib/Items/ApplicationDockItemProvider.vala \
#	$(top_srcdir)/lib/Items/DefaultApplicationDockItemProvider.vala \
#	$(top_srcdir)/lib/Items/DockContainer.vala \
#	$(top_srcdir)/lib/Items/DockElement.vala \
#	$(top_srcdir)/lib/Items/DockItem.vala \
#	$(top_srcdir)/lib/Items/DockItemDrawValue.vala \
#	$(top_srcdir)/lib/Items/DockItemProvider.vala \
#	$(top_srcdir)/lib/Items/DockItemPreferences.vala \
#	$(top_srcdir)/lib/Items/Enums.vala \
#	$(top_srcdir)/lib/Items/FileDockItem.vala \
#	$(top_srcdir)/lib/Items/PlaceholderDockItem.vala \
#	$(top_srcdir)/lib/Items/PlankDockItem.vala \
#	$(top_srcdir)/lib/Items/TransientDockItem.vala \
#	$(top_srcdir)/lib/Services/Environment.vala \
#	$(top_srcdir)/lib/Services/EnvironmentSettings.vala \
#	$(top_srcdir)/lib/Services/Logger.vala \
#	$(top_srcdir)/lib/Services/Paths.vala \
#	$(top_srcdir)/lib/Services/Preferences.vala \
#	$(top_srcdir)/lib/Services/Settings.vala \
#	$(top_srcdir)/lib/Services/System.vala \
#	$(top_srcdir)/lib/Services/Unity.vala \
#	$(top_srcdir)/lib/Services/Worker.vala \
#	$(top_srcdir)/lib/Widgets/CompositedWindow.vala \
#	$(top_srcdir)/lib/Widgets/DockWindow.vala \
#	$(top_srcdir)/lib/Widgets/HoverWindow.vala \
#	$(top_srcdir)/lib/Widgets/PoofWindow.vala \
#	$(top_srcdir)/lib/Widgets/PreferencesWindow.vala \
#	$(top_srcdir)/lib/Widgets/TitledSeparatorMenuItem.vala \
#	$(NULL)

#valadoc_flags_plank = \
#	--force \
#	--verbose \
#	--package-name $(PACKAGE_NAME) \
#	--package-version $(PACKAGE_VERSION) \
#	$(PLANK_DOCS_VALAFLAGS) \
#	--driver "`$(VALAC) --version`" \
#	--pkg plank-internal \
#	--pkg compat \
#	--pkg config \
#	--vapidir=$(top_builddir)/lib \
#	--vapidir=$(top_srcdir)/vapi \
#	$(NULL)

#DISTCLEANFILES = \
#	plank_c_doc.stamp \
#	plank_vala_doc.stamp \
#	plank_web_doc.stamp \
#	$(NULL)

all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/Makefile.common $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu docs/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu docs/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(top_srcdir)/Makefile.common $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-man1: $(dist_man_MANS)
	@$(NORMAL_INSTALL)
	@list1=''; \
	list2='$(dist_man_MANS)'; \
	test -n "$(man1dir)" \
	  && test -n "`echo $$list1$$list2`" \
	  || exit 0; \
	echo " $(MKDIR_P) '$(DESTDIR)$(man1dir)'"; \
	$(MKDIR_P) "$(DESTDIR)$(man1dir)" || exit 1; \
	{ for i in $$list1; do echo "$$i"; done;  \
	if test -n "$$list2"; then \
	  for i in $$list2; do echo "$$i"; done \
	    | sed -n '/\.1[a-z]*$$/p'; \
	fi; \
	} | while read p; do \
	  if test -f $$p; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; echo "$$p"; \
	done | \
	sed -e 'n;s,.*/,,;p;h;s,.*\.,,;s,^[^1][0-9a-z]*$$,1,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,' | \
	sed 'N;N;s,\n, ,g' | { \
	list=; while read file base inst; do \
	  if test "$$base" = "$$inst"; then list="$$list $$file"; else \
	    echo " $(INSTALL_DATA) '$$file' '$(DESTDIR)$(man1dir)/$$inst'"; \
	    $(INSTALL_DATA) "$$file" "$(DESTDIR)$(man1dir)/$$inst" || exit $$?; \
	  fi; \
	done; \
	for i in $$list; do echo "$$i"; done | $(am__base_list) | \
	while read files; do \
	  test -z "$$files" || { \
	    echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(man1dir)'"; \
	    $(INSTALL_DATA) $$files "$(DESTDIR)$(man1dir)" || exit $$?; }; \
	done; }

uninstall-man1:
	@$(NORMAL_UNINSTALL)
	@list=''; test -n "$(man1dir)" || exit 0; \
	files=`{ for i in $$list; do echo "$$i"; done; \
	l2='$(dist_man_MANS)'; for i in $$l2; do echo "$$i"; done | \
	  sed -n '/\.1[a-z]*$$/p'; \
	} | sed -e 's,.*/,,;h;s,.*\.,,;s,^[^1][0-9a-z]*$$,1,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,'`; \
	dir='$(DESTDIR)$(man1dir)'; $(am__uninstall_files_from_dir)
install-docDATA: $(doc_DATA)
	@$(NORMAL_INSTALL)
	@list='$(doc_DATA)'; test -n "$(docdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(docdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(docdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(docdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(docdir)" || exit $$?; \
	done

uninstall-docDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(doc_DATA)'; test -n "$(docdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(docdir)'; $(am__uninstall_files_from_dir)
tags TAGS:

ctags CTAGS:

cscope cscopelist:


distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(MANS) $(DATA)
installdirs:
	for dir in "$(DESTDIR)$(man1dir)" "$(DESTDIR)$(docdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-generic distclean-local

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-docDATA install-man

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man: install-man1

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-generic mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-docDATA uninstall-man

uninstall-man: uninstall-man1

.MAKE: all check install install-am install-strip

.PHONY: all all-am check check-am clean clean-generic clean-libtool \
	cscopelist-am ctags-am distclean distclean-generic \
	distclean-libtool distclean-local distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-docDATA install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-man1 \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags-am uninstall uninstall-am uninstall-docDATA uninstall-man \
	uninstall-man1

.PRECIOUS: Makefile


#plank.1: $(top_builddir)/src/plank $(srcdir)/plank.h2m
#	$(HELP2MAN) $(top_builddir)/src/plank \
#		--include $(srcdir)/plank.h2m \
#		--libtool --no-info \
#		--output=$@

#cdocs: plank_c_doc.stamp
#plank_c_doc.stamp: $(plank_doc_files) $(top_builddir)/lib/plank-internal.vapi Makefile
#	$(AM_V_GEN)$(VALADOC) \
#		-X -l -X $(top_builddir)/lib/.libs/libplank.so \
#		-X $(top_builddir)/lib/plank.h \
#		-o c-doc/ \
#		--doclet=gtkdoc \
#		$(valadoc_flags_plank) \
#		$(filter %.vala,$^)
#	$(AM_V_at)touch $@

#plank_vala_doc.stamp: $(plank_doc_files) $(top_builddir)/lib/plank-internal.vapi Makefile
#	$(AM_V_GEN)$(VALADOC) \
#		-o vala-doc/ \
#		--doclet=devhelp \
#		$(valadoc_flags_plank) \
#		$(filter %.vala,$^)
#	$(AM_V_at)touch $@

#html: plank_web_doc.stamp
#plank_web_doc.stamp: $(plank_doc_files) $(top_builddir)/lib/plank-internal.vapi Makefile
#	$(AM_V_GEN)$(VALADOC) \
#		-o web-doc/ \
#		--doclet=html \
#		$(valadoc_flags_plank) \
#		$(filter %.vala,$^)
#	$(AM_V_at)touch $@

distclean-local: distclean-docs
distclean-docs:
	rm -rf c-doc vala-doc web-doc

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
